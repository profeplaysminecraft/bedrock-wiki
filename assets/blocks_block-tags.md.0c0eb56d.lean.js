import{_ as s,c as l,a as n,b as a,d as t,e as o,o as r,r as p}from"./404.md.f26da307.js";const S=JSON.parse('{"title":"Block Tags","description":"","frontmatter":{"title":"Block Tags","category":"Documentation","tags":["experimental"]},"headers":[{"level":2,"title":"Application","slug":"application","link":"#application","children":[]},{"level":2,"title":"Lists of Block Tags","slug":"lists-of-block-tags","link":"#lists-of-block-tags","children":[{"level":3,"title":"Vanilla Tags","slug":"vanilla-tags","link":"#vanilla-tags","children":[]},{"level":3,"title":"Vanilla Block Tags","slug":"vanilla-block-tags","link":"#vanilla-block-tags","children":[]}]}],"relativePath":"blocks/block-tags.md"}'),c={name:"blocks/block-tags.md"},i=a("p",null,[t("Block Tags are used for various block properties. They can be called when testing for block arguments in commands. Some tags are prefixed with "),a("code",null,"can_be"),t(", or "),a("code",null,"can_hurt"),t(". One would expect these to have a boolean response.")],-1),d=a("h2",{id:"application",tabindex:"-1"},[t("Application "),a("a",{class:"header-anchor",href:"#application","aria-hidden":"true"},"#")],-1),D=a("p",null,"Block tags can be applied exactly as items, as seen below:",-1),g=o("",8);function k(u,b,F,h,y,C){const e=p("CodeHeader");return r(),l("div",null,[i,d,D,n(e),g])}const A=s(c,[["render",k]]);export{S as __pageData,A as default};
