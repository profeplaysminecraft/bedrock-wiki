import{_ as t,c as r,a,w as n,b as l,d as s,e as o,r as p,o as c}from"./404.md.f26da307.js";const x=JSON.parse('{"title":"Useful tick.json Creations","description":"","frontmatter":{"title":"Useful tick.json Creations","mentions":["MedicalJewel105","Hatchibombotar"],"category":"General"},"headers":[{"level":2,"title":"Death Detection","slug":"death-detection","link":"#death-detection","children":[]},{"level":2,"title":"Looping Timer","slug":"looping-timer","link":"#looping-timer","children":[]},{"level":2,"title":"Hello World","slug":"hello-world","link":"#hello-world","children":[]},{"level":2,"title":"First World Load","slug":"first-world-load","link":"#first-world-load","children":[]},{"level":2,"title":"NOT hasitem detection","slug":"not-hasitem-detection","link":"#not-hasitem-detection","children":[]}],"relativePath":"commands/tick_json-creations.md"}'),i={name:"commands/tick_json-creations.md"},d=l("p",null,[s("On this page you can find some of the tick.json creations by our community. You can read about tick.json "),l("a",{href:"/commands/mcfunction.html#creating-tick-json"},"here")],-1),u=l("h2",{id:"death-detection",tabindex:"-1"},[s("Death Detection "),l("a",{class:"header-anchor",href:"#death-detection","aria-hidden":"true"},"#")],-1),m=l("p",null,[s("Death detection with commands that does not use "),l("code",null,"player.json")],-1),b=o(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tag @a add dead</span></span>
<span class="line"><span style="color:#A6ACCD;">tag @e[type=player] remove dead # Removes dead tag from alive players.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">execute @a[tag=dead, tag=!already_dead] ~~~ function my_function</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">tag @a[tag=dead, tag=!already_dead] add already_dead</span></span>
<span class="line"><span style="color:#A6ACCD;">tag @a[tag=!dead, tag=already_dead] remove already_dead</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>This works because @a targets all players whereas <code>@e[type=player]</code> only targets alive players. You can do whatever you want with the output command, in the above example, it runs the <code>my_function</code> function.</p><p>Example: <a href="https://github.com/Hatchibombotar/graves-addon/blob/main/Graves_BP/functions/graves/death_detection.mcfunction" target="_blank" rel="noreferrer">Graves Addon by Hatchibombotar</a>.</p><h2 id="looping-timer" tabindex="-1">Looping Timer <a class="header-anchor" href="#looping-timer" aria-hidden="true">#</a></h2><p>Here you can find timer that executes function with name <code>my_function</code> on players with a 10 sec delay.</p>`,5),h=o(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"># Setup</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard objectives add timer dummy</span></span>
<span class="line"><span style="color:#A6ACCD;"># Loop</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players add @a timer 1</span></span>
<span class="line"><span style="color:#A6ACCD;"># Main</span></span>
<span class="line"><span style="color:#A6ACCD;">execute @a[scores={timer=200}] ~~~ function my_function</span></span>
<span class="line"><span style="color:#A6ACCD;"># Timer Update</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players set @a[scores={timer=200..}] timer 0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Note that the order of loop and timer update is important.</p><h2 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-hidden="true">#</a></h2><p>This function tellraws something to every player, who joined the game for the first time. It also has a 4 seconds delay so world is fully loaded.</p>`,4),_=o(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"># Setup</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard objectives add hello_world dummy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players set @a[tag=!hello_world] hello_world 81</span></span>
<span class="line"><span style="color:#A6ACCD;">tag @a add hello_world</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players add @a[scores={hello_world=!0}] hello_world -1</span></span>
<span class="line"><span style="color:#A6ACCD;">execute @a[scores={hello_world=1}] ~~~ tellraw @s {&quot;rawtext&quot;:[{&quot;text&quot;:&quot;Did you know that MJ105 made this Hello World function?&quot;}]}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="first-world-load" tabindex="-1">First World Load <a class="header-anchor" href="#first-world-load" aria-hidden="true">#</a></h2><p>Unlike entities, worlds can not be applied tags. Instead we have to use scoreboards. Because of that, it is a bit more complicated.</p>`,3),C=o(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">execute @a[c=1] ~ ~ ~ function load_commands</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>Here, we are running it from one player, this could be from any <strong>entity</strong> though.</p>`,2),y=o(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"># setup</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard objectives add loaded dummy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># check if the value that the player value has is set to 1, otherwise runs commands</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players operation @s loaded = value loaded</span></span>
<span class="line"><span style="color:#A6ACCD;">execute @s[scores={loaded=0}] ~ ~ ~ say The world is loaded!</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players set value loaded 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>The above function checks if the player value has the loaded score set to 0, then runs functions if that is true. It sets it to 1 afterwards to make sure it does not run again.</p><h2 id="not-hasitem-detection" tabindex="-1">NOT hasitem detection <a class="header-anchor" href="#not-hasitem-detection" aria-hidden="true">#</a></h2><p>Ever wanted to check if player doesn&#39;t have an item?</p>`,4),A=o(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"># Setup</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard objectives add detect dummy</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players add @a detect 0</span></span>
<span class="line"><span style="color:#A6ACCD;"># Main</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players set @a[hasitem={item=mj105:flashlight,location=slot.weapon.mainhand}] detect 4</span></span>
<span class="line"><span style="color:#A6ACCD;">scoreboard players add @a[scores={detect=!0}] detect -1</span></span>
<span class="line"><span style="color:#A6ACCD;"># Trigger</span></span>
<span class="line"><span style="color:#A6ACCD;">execute @a[scores={detect=1}] ~~~ function single_trigger</span></span>
<span class="line"><span style="color:#A6ACCD;">execute @a[scores={detect=0}] ~~~ function multiple_trigger</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>This sets up <code>detect</code> scoreboard with 0 value. Then it adds 4 (recommended use this amount) to this scoreboard if player has item you want. This scoreboard is lowered every tick. When value of scoreboard drops to 1, you can do something with player. It will be a singe trigger. If you call a function on a player, whose <code>detect</code> value is 0, function will be run every time this player doesn&#39;t have specified item.</p>`,2);function f(g,v,D,w,T,k){const e=p("CodeHeader");return c(),r("div",null,[d,u,m,a(e,null,{default:n(()=>[s("BP/functions/death_detection.mcfunction")]),_:1}),b,a(e,null,{default:n(()=>[s("BP/functions/timer.mcfunction")]),_:1}),h,a(e,null,{default:n(()=>[s("BP/functions/hello_world.mcfunction")]),_:1}),_,a(e,null,{default:n(()=>[s("BP/functions/load_check.mcfunction")]),_:1}),C,a(e,null,{default:n(()=>[s("BP/functions/load_commands.mcfunction")]),_:1}),y,a(e,null,{default:n(()=>[s("BP/functions/detect.mcfunction")]),_:1}),A])}const P=t(i,[["render",f]]);export{x as __pageData,P as default};
