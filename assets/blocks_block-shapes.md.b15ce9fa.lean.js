import{_ as s,c as e,a,b as t,d,e as o,o as n,r as l}from"./404.md.f26da307.js";const C=JSON.parse('{"title":"Block Shapes","description":"","frontmatter":{"title":"Block Shapes","category":"Documentation"},"headers":[{"level":2,"title":"Application","slug":"application","link":"#application","children":[]},{"level":2,"title":"List of known Blockshapes","slug":"list-of-known-blockshapes","link":"#list-of-known-blockshapes","children":[]}],"relativePath":"blocks/block-shapes.md"}'),c={name:"blocks/block-shapes.md"},p=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Deprecated"),t("p",null,"Block Shapes are no longer officially supported and cannot be used with custom blocks, however they can still be used with vanilla ones.")],-1),i=t("p",null,"Blockshapes are essentially block geometries or models that are hard-coded into vanilla, meaning that they exist without having accessible files.",-1),b=t("h2",{id:"application",tabindex:"-1"},[d("Application "),t("a",{class:"header-anchor",href:"#application","aria-hidden":"true"},"#")],-1),_=t("p",null,[d("They are added in the resource pack's file, "),t("code",null,"blocks.json"),d(", using child "),t("code",null,'"blockshape"'),d(" in a block's object. This would look something like this:")],-1),u=o("",4);function h(D,k,y,m,F,f){const r=l("CodeHeader");return n(),e("div",null,[p,i,b,_,a(r),u])}const w=s(c,[["render",h]]);export{C as __pageData,w as default};
