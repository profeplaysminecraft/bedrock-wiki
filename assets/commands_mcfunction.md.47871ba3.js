import{_ as c,c as l,a as n,w as e,e as a,r as t,o as r,d as s}from"./404.md.f26da307.js";const D=JSON.parse('{"title":"Functions","description":"","frontmatter":{"title":"Functions","category":"General","mention":["SirLich"],"tags":["easy"]},"headers":[{"level":2,"title":"Running functions through tick.json","slug":"running-functions-through-tick-json","link":"#running-functions-through-tick-json","children":[{"level":3,"title":"Creating tick.json","slug":"creating-tick-json","link":"#creating-tick-json","children":[]},{"level":3,"title":"Known Issues","slug":"known-issues","link":"#known-issues","children":[]},{"level":3,"title":"Useful tick.json Creations","slug":"useful-tick-json-creations","link":"#useful-tick-json-creations","children":[]}]}],"relativePath":"commands/mcfunction.md"}'),p={name:"commands/mcfunction.md"},u=a('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Minecraft can <strong>not</strong> run more than 10,000 lines of functions in one function file. This includes any other function files that are executed inside of the original file.</p></div><p><code>mcfunction</code> files are stored in your BP as <code>BP/functions/my_function.mcfunction</code>. You can add as many functions as you like.</p><p>Functions are used to group multiple Minecraft Commands (such as <code>/say</code> or <code>/teleport</code>) into manageable chunks (or functions). Commands inside a function file do not begin with <code>/</code>.</p><p>Example:</p>',4),d=a(`<div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tag @s add dev</span></span>
<span class="line"><span style="color:#A6ACCD;">gamemode creative</span></span>
<span class="line"><span style="color:#A6ACCD;">effect @s night_vision 100000 1 true</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># You can write comments like this</span></span>
<span class="line"><span style="color:#A6ACCD;">say hey!</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Functions can be executed in-game by typing <code>/function name_of_function</code>. This will execute all the commands in the function file, all in a single tick. Nested functions will also run in the same tick as the parent function.</p><p>Function files can be nested, for example: <code>BP/functions/teleport/home.mcfunction</code> will create a new function called <code>teleport/home</code>, which can be called in game like <code>/function teleport/home</code>.</p><p>Function files can be reloaded without leaving the game with the <code>/reload</code> command.</p><h2 id="running-functions-through-tick-json" tabindex="-1">Running functions through tick.json <a class="header-anchor" href="#running-functions-through-tick-json" aria-hidden="true">#</a></h2><p><code>tick.json</code> is a server-side file located as <code>BP/functions/tick.json</code> that lets you execute function files.</p><p>Functions will be run for each tick as if placed in a repeating command block.</p><h3 id="creating-tick-json" tabindex="-1">Creating tick.json <a class="header-anchor" href="#creating-tick-json" aria-hidden="true">#</a></h3><p>Create a file called tick.json in your root function folder. The format is this:</p>`,9),f=a(`<div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">values</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function_file_name_one</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function_file_name_two</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="known-issues" tabindex="-1">Known Issues <a class="header-anchor" href="#known-issues" aria-hidden="true">#</a></h3><p>While this is a valuable file when you&#39;re trying to stray away from using repeating command blocks in-game, it&#39;s known for executing function files before the world has fully loaded in. This might cause unintended command behavior and crashes, and it&#39;s recommended to wait for a more official release of this file.</p><h3 id="useful-tick-json-creations" tabindex="-1">Useful tick.json Creations <a class="header-anchor" href="#useful-tick-json-creations" aria-hidden="true">#</a></h3>`,4);function h(m,_,g,y,k,b){const o=t("CodeHeader"),i=t("BButton");return r(),l("div",null,[u,n(o,null,{default:e(()=>[s("BP/functions/my_function.mcfunction")]),_:1}),d,n(o,null,{default:e(()=>[s("BP/functions/tick.json")]),_:1}),f,n(i,{link:"/commands/tick_json-creations",color:"blue"},{default:e(()=>[s("View")]),_:1})])}const F=c(p,[["render",h]]);export{D as __pageData,F as default};
